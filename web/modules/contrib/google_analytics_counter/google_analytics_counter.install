<?php

/**
 * @file
 * Update, and uninstall functions for the Google Analytics Counter module.
 */

use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\google_analytics_counter\GoogleAnalyticsCounterHelper;

/**
 * Implements hook_schema().
 */
function google_analytics_counter_schema() {
  $schema['google_analytics_counter'] = [
    'description' => 'Stores URIs and pageviews from Google Analytics.',
    'fields' => [
      'pagepath_hash' => [
        'type' => 'varchar',
        'length' => 32,
        'description' => 'md5 hash of the relative page path.',
        'not null' => TRUE,
      ],
      'pagepath' => [
        'type' => 'varchar',
        'length' => 2048,
        'description' => 'Relative page path, for example "node/1" or "contact", as stored by GA.',
        'not null' => TRUE,
      ],
      'pageviews' => [
        'type' => 'int',
        'size' => 'big',
        'description' => 'Pageview count.',
        'unsigned' => TRUE,
        'default' => 0,
        'not null' => TRUE,
      ],
    ],
    'primary key' => ['pagepath_hash'],
    'indexes' => [
      'pagepath' => [['pagepath', 20]],
      'pageviews' => ['pageviews'],
    ],
  ];

  $schema['google_analytics_counter_storage'] = [
    'description' => 'Stores node ids for nodes only that have pageview totals.',
    'fields' => [
      'nid' => [
        'description' => 'Node IDs',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'pageview_total' => [
        'description' => 'Total pageview counts',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
    ],
    'primary key' => ['nid'],
    'indexes' => [
      'nid' => ['nid'],
      'pageview_total' => ['pageview_total'],
    ],
  ];

  return $schema;
}

/**
 * Implements hook_install().
 */
function google_analytics_counter_install() {
  GoogleAnalyticsCounterHelper::gacSaveTypeConfig();
}

/**
 * Implements hook_uninstall().
 */
function google_analytics_counter_uninstall() {

  // Revoke the state values.
  GoogleAnalyticsCounterHelper::gacDeleteState();

  // Remove queued items from the database.
  GoogleAnalyticsCounterHelper::gacRemoveQueuedItems();

  // Uninstall the Google Analytics Counter field.
  $bundles = ['node'];

  $fields['field_google_analytics_counter'] = [
    'entity_type' => 'node',
  ];

  // Delete the field config.
  foreach ($bundles as $bundle) {
    foreach ($fields as $field_name => $config) {
      $field = FieldConfig::loadByName($config['entity_type'], $bundle, $field_name);
      if (!empty($field)) {
        $field->delete();
      }
    }
  }

  // Delete the field storage config.
  foreach ($fields as $field_name => $config) {
    $field_storage = FieldStorageConfig::loadByName($config['entity_type'], $field_name);
    if (!empty($field_storage)) {
      $field_storage->delete();
    }
  }
}

/**
 * New settings' default values.
 */
function google_analytics_counter_update_9001(&$sandbox) {
  $config = \Drupal::configFactory()->getEditable('google_analytics_counter.settings');

  // In case of custom date is set, set start_date to "custom.".
  if (empty($config->get('general_settings.start_date')) && !empty($config->get('general_settings.custom_start_date')) && !empty($config->get('general_settings.custom_end_date'))) {
    $config->set('general_settings.start_date', 'custom');
    $config->set('general_settings.end_date', '');
  }

  $config->set('general_settings.custom_start_day', '');
  $config->set('general_settings.custom_end_day', '');
  $config->set('general_settings.metric', 'screenPageViews');
  $config->set('general_settings.dimension', 'pagePath');
  $config->set('general_settings.result_processor', 'url_alias');
  $config->save();
}

/**
 * Empty the queue because of the processing change to eliminate timeouts.
 */
function google_analytics_counter_update_9002(&$sandbox) {
  $queue = \Drupal::queue('google_analytics_counter_worker');
  $queue->deleteQueue();
}

/**
 * Empty the queue because of the processing change to eliminate timeouts.
 */
function google_analytics_counter_update_9003(&$sandbox) {
  // Empty update hook to clear cache because of service argument and
  // constructor changes.
}

/**
 * Set "nid" as primary key for the google_analytics_counter_storage table.
 */
function google_analytics_counter_update_9004() {
  $database = \Drupal::database();
  $database->schema()->dropPrimaryKey('google_analytics_counter_storage');
  $new_primary_keys = ['nid'];
  $database->schema()->addPrimaryKey('google_analytics_counter_storage', $new_primary_keys);
}
